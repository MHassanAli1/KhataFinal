generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite" // Will be swapped to postgres in your sync script
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String // hashed password
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  transactions Transaction[]
}

model Transaction {
  id          Int       @id @default(autoincrement())
  userID      Int
  user        User      @relation(fields: [userID], references: [id], onDelete: Cascade)
  ZoneName    String
  KhdaName    String
  KulAmdan    BigInt
  bookNumber   String
  ticketNumber Int
  date        DateTime
  KulAkhrajat BigInt
  SaafiAmdan  BigInt
  Exercise    BigInt
  KulMaizan   BigInt
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  Synced      Boolean   @default(false)
  SyncedAt    DateTime?

  trollies Trolly[]
  akhrajat Akhrajat[]
}

model Trolly {
  id          Int      @id @default(autoincrement())
  total       Int
  StartingNum BigInt
  EndingNum   BigInt
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  transactionId Int
  transaction   Transaction @relation(fields: [transactionId], references: [id], onDelete: Cascade)
}

model Akhrajat {
  id             Int        @id @default(autoincrement())
  title          String
  description    String?    // nullable if “Other”
  amount         BigInt
  date           DateTime   // NEW: date when the expense was made

  transactionId  Int
  transaction    Transaction @relation(fields: [transactionId], references: [id], onDelete: Cascade)
}

model UsedBookNumber {
  id        Int      @id @default(autoincrement())
  number    String   @unique
  khdaName  String
  createdAt DateTime @default(now())
}


//For Admin Panel
model Zone {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  khdas     Khda[]
}

model Khda {
  id        Int    @id @default(autoincrement())
  name      String
  zone      Zone   @relation(fields: [zoneId], references: [id], onDelete: Cascade)
  zoneId    Int

}

model AkhrajatTitle {
  id   Int    @id @default(autoincrement())
  name String @unique
}

model DeletedTransaction {
  id             Int      @id @default(autoincrement())
  transactionId  Int      @unique
  deletedAt      DateTime @default(now())
}

